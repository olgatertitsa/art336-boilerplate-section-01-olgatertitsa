/*
12 Column Mobile First Grid System
*/

// Grid Variables
$desktop: 1140px;
$tablet: 768px;
$mobile: 550px;
$gutter: 14px;
$padding: 6px;


// Common to all grids
.row, .row-no-gutter {
    margin: 0 auto;
    max-width: $desktop;
    width: 100%;
}

.row:after, .row-no-gutter:after { /*so that the columns float inside the row... so we can apply a background color to a row or whatever... cause floating does weird stuff*/
    content: "";
    display: table;
    clear: both;
}

[class^="col-"] {
    float: left;
    margin-bottom: $gutter;
    width: 100%;
}


// Columns with verticle gutters
.row [class^="col-"] {
    @media only screen and (min-width: $tablet) {
        margin-left: $gutter/2;
        margin-right: $gutter/2;
    }
}

.row .col-1 {
    @media only screen and (min-width: $tablet) {
        width: calc(8.333333% - #{$gutter});   
    }
}

.row .col-2 {
    @media only screen and (min-width: $tablet) {
        width: calc(16.666666% - #{$gutter});   
    }
}

.row .col-3 {
    @media only screen and (min-width: $tablet) {
        width: calc(25% - #{$gutter});   
    }
}

.row .col-4 {
    @media only screen and (min-width: $tablet) {
        width: calc(33.333333% - #{$gutter});   
    }
}

.row .col-5 {
    @media only screen and (min-width: $tablet) {
        width: calc(41.666666% - #{$gutter});   
    }
}

.row .col-6 {
    @media only screen and (min-width: $tablet) {
        width: calc(50% - #{$gutter});   
    }
}


.row .col-7 {
    @media only screen and (min-width: $tablet) {
        width: calc(58.3333333% - #{$gutter});   
    }
}


.row .col-8 {
    @media only screen and (min-width: $tablet) {
        width: calc(66.6666666% - #{$gutter});   
    }
}

.row .col-9 {
    @media only screen and (min-width: $tablet) {
        width: calc(75% - #{$gutter});   
    }
}

.row .col-10 {
    @media only screen and (min-width: $tablet) {
        width: calc(83.333333% - #{$gutter});   
    }
}

.row .col-11 {
    @media only screen and (min-width: $tablet) {
        width: calc(91.666666% - #{$gutter});   
    }
}

.row .col-12 {
    @media only screen and (min-width: $tablet) {
        width: calc(100% - #{$gutter});   
    }
}


// Columns without verticle gutters
.row-no-gutter {
    @media only screen and (min-width: $tablet) {
        box-sizing: border-box; //so it applies to inside of element, not outside, so it doesn't spill over into a new line//
        padding-left: $gutter/2;
        padding-right: $gutter/2;
    }
}

.row-no-gutter .col-1 {
    @media only screen and (min-width: $tablet) {
        width: 8.333333%
    }
}

.row-no-gutter .col-2 {
    @media only screen and (min-width: $tablet) {
        width: 16.666666%
    }
}

.row-no-gutter .col-3 {
    @media only screen and (min-width: $tablet) {
        width: 25%
    }
}

.row-no-gutter .col-4 {
    @media only screen and (min-width: $tablet) {
        width: 33.333333%
    }
}

.row-no-gutter .col-5 {
    @media only screen and (min-width: $tablet) {
        width: 41.666666%
    }
}

.row-no-gutter .col-6 {
    @media only screen and (min-width: $tablet) {
        width: 50%
    }
}

.row-no-gutter .col-7 {
    @media only screen and (min-width: $tablet) {
        width: 58.3333333%
    }
}

.row-no-gutter .col-8 {
    @media only screen and (min-width: $tablet) {
        width: 66.6666666%
    }
}

.row-no-gutter .col-9 {
    @media only screen and (min-width: $tablet) {
        width: 75%
    }
}

.row-no-gutter .col-10 {
    @media only screen and (min-width: $tablet) {
        width: 83.333333%
    }
}

.row-no-gutter .col-11 {
    @media only screen and (min-width: $tablet) {
        width: 91.666666%
    }
}

.row-no-gutter .col-12 {
    @media only screen and (min-width: $tablet) {
        width: 100%
    }
}

// Grid default modifiers 
.no-bottom-gutter [class^="col"] {
    margin-bottom: 0;
}

.outer {
    width: 100%;
    margin-bottom: $gutter;
}

.outer .row:last-of-type [class^="col"], 
.outer .row-no-gutter:last-of-type [class^="col"] {
    margin-bottom: 0;
}

.shift-right {
    float:right;
}